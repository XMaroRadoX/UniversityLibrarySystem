/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Librarian;

import Logic.Library;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Marwan
 */
public class ReturnBook extends javax.swing.JFrame {

    /**
     * Creates new form ReturnBook
     */
    Library library;
    SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss a");

    public ReturnBook() {
        initComponents();
    }

    public ReturnBook(Library library) {
        initComponents();
        this.library = library;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Header = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        adminpasswordLabel = new javax.swing.JLabel();
        callNoField = new javax.swing.JTextField();
        returnButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        studentIDField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Librarian - Return book");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        Header.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Header.setForeground(new java.awt.Color(153, 153, 153));
        Header.setText("Return book");

        NameLabel.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        NameLabel.setForeground(new java.awt.Color(153, 153, 153));
        NameLabel.setText("Book call #:");

        adminpasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        adminpasswordLabel.setForeground(new java.awt.Color(153, 153, 153));
        adminpasswordLabel.setText("Student ID:");

        callNoField.setBackground(new java.awt.Color(51, 51, 51));
        callNoField.setForeground(new java.awt.Color(255, 255, 255));
        callNoField.setCaretColor(new java.awt.Color(255, 255, 255));
        callNoField.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        callNoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callNoFieldActionPerformed(evt);
            }
        });

        returnButton.setBackground(new java.awt.Color(0, 0, 0));
        returnButton.setForeground(new java.awt.Color(255, 255, 255));
        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        error.setForeground(new java.awt.Color(255, 51, 51));

        studentIDField.setBackground(new java.awt.Color(51, 51, 51));
        studentIDField.setForeground(new java.awt.Color(255, 255, 255));
        studentIDField.setCaretColor(new java.awt.Color(255, 255, 255));
        studentIDField.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        studentIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(adminpasswordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(callNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Header)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(Header)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(callNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminpasswordLabel)
                    .addComponent(studentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void callNoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callNoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_callNoFieldActionPerformed

    public void saveInFile(String s) {
        BufferedWriter bw = null;
        int i = 0;
        try {
            File file = new File(s);

            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file);
            bw = new BufferedWriter(fw);
            for (i = 0; i < library.getAdminsCount(); i++) {
                String data = "a," + library.getAdmins()[i].getName() + "," + library.getAdmins()[i].getPassword() + "\n";
                bw.write(data);
            }

            for (i = 0; i < library.getLibraiansCount(); i++) {
                String data = "l," + library.getLibraians()[i].getName() + "," + library.getLibraians()[i].getPassword() + "," + library.getLibraians()[i].getEmail() + "," + library.getLibraians()[i].getCity() + "," + library.getLibraians()[i].getAddress() + "," + library.getLibraians()[i].getContactNo() + "\n";
                bw.write(data);
            }

            for (i = 0; i < library.getBooksCount(); i++) {
                String data = "b," + library.getBooks()[i].getCallNo() + "," + library.getBooks()[i].getBookName() + "," + library.getBooks()[i].getAuthorName() + "," + library.getBooks()[i].getPublisherName() + "," + library.getBooks()[i].getQuantity() + "," + library.getBooks()[i].getIssued() + "," + formatter.format(library.getBooks()[i].getAddDate()) + "\n";
                bw.write(data);
            }
            for (i = 0; i < library.getStudentsCount(); i++) {
                int k;
                String data = "s," + library.getStudents()[i].getName() + "," + library.getStudents()[i].getPassword() + "," + library.getStudents()[i].getEmail() + "," + library.getStudents()[i].getCity() + "," + Integer.toString(library.getStudents()[i].getId()) + "," + library.getStudents()[i].getAddress() + "," + library.getStudents()[i].getContactNo() + "," + Integer.toString(library.getStudents()[i].getIssued()) + "," + Double.toString(library.getStudents()[i].getPenalty());
                if (library.getStudents()[i].getIssued() > 0) {
                    k = 0;
                    while (true) {
                        if (k == library.getStudents()[i].getIssued()) {
                            break;
                        }
                        data = data + "," + library.getStudents()[i].getIssuedBooks()[k] + "," + formatter.format(library.getStudents()[i].getIssueDates()[k]) + "," + formatter.format(library.getStudents()[i].getReturnDates()[k]);

                        k++;
                    }
                    data = data + ",null" + "\n";
                } else {
                    data = data + "\n";
                }
                bw.write(data);
            }

        } catch (IOException ioe) {
        } finally {
            try {
                if (bw != null) {
                    bw.close();
                }
            } catch (IOException ex) {
            }
        }
    }

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        String callNo = callNoField.getText();
        String id = studentIDField.getText();
        error.setText(null);
        if (callNo.equals("") && id.equals("")) {
            error.setText("No data entered");
            return;
        } else {
            try {
                Integer.parseInt(id);
            } catch (NumberFormatException e) {
                error.setText("Enter valid ID");
                return;
            }
        }

        for (int i = 0; i < library.getStudentsCount(); i++) {
            if (Integer.parseInt(id) == library.getStudents()[i].getId()) {
                if (library.getStudents()[i].getIssued() > 0) {
                    for (int j = 0; j < library.getStudents()[i].getIssued(); j++) {
                        if (library.getStudents()[i].getIssuedBooks()[j].equals(callNo)) {

                            for (int m = 0; m < library.getBooksCount(); m++) {
                                if (callNo.equals(library.getBooks()[m].getCallNo())) {
                                    if (Calendar.getInstance().getTime().after(library.getStudents()[i].getReturnDates()[j])) {
                                        String penalty = JOptionPane.showInputDialog("Book is returned after return date\nEnter the late finicial penalty");
                                        try {
                                            Double.parseDouble(penalty);
                                        } catch (NumberFormatException e) {
                                            error.setText("Wrong penalty amount entered");
                                            return;
                                        }
                                        library.getStudents()[i].setPenalty(library.getStudents()[i].getPenalty() + Double.parseDouble(penalty));
                                    }
                                    for (int k = j; k <= 1; k++) {
                                        library.getStudents()[i].getIssuedBooks()[k] = library.getStudents()[i].getIssuedBooks()[k + 1];
                                    }
                                    library.getStudents()[i].updateIssued(library.getStudents()[i].getIssued() - 1);
                                    library.getStudents()[i].setI();
                                    library.getBooks()[m].setQuantity(library.getBooks()[m].getQuantity() + 1);
                                    library.getBooks()[m].setIssued(library.getBooks()[m].getIssued() - 1);
                                    saveInFile(library.getPath());
                                    JOptionPane.showMessageDialog(null, "Book returned successfully!");
                                    LibrarianSection ls = new LibrarianSection(library);
                                    dispose();
                                    ls.setVisible(true);
                                    return;
                                }
                            }

                        }
                    }
                    error.setText("Wrong call no or student did not issue that book");
                    return;
                } else {
                    error.setText("Student has no issued books");
                    return;
                }
            }
        }
        error.setText("Student not found");

    }//GEN-LAST:event_returnButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        LibrarianSection librarianMenu = new LibrarianSection(library);
        dispose();
        librarianMenu.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void studentIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel adminpasswordLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField callNoField;
    private javax.swing.JLabel error;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton returnButton;
    private javax.swing.JTextField studentIDField;
    // End of variables declaration//GEN-END:variables
}
